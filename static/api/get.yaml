openapi: 3.0.3
info:
  title: ''

servers:
  - url: https://api.paysecure.net    

paths:
  /api/v1/customer:
    get:
      tags: [CUSTOMER]
      summary: Fetch customer details
      parameters:
        - in: header
          name: Authorization
          required: true
          schema: { type: string }
        - in: header
          name: BrandId
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - merchantCustomerId
              properties:
                merchantCustomerId: { type: string, example: testuser@gmail.com }
      responses:
        '200':
          description: Customer details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  customerId: { type: string, example: 67c54bff81fd9953719186ff }
                  merchantCustomerId: { type: string, example: testuser@gmail.com }
                  fullName: { type: string, example: Akshay Singh }
                  emailId: { type: string, example: testuser@gmail.com }
                  dateOfBirth: { type: string, example: 1992-11-28 }
                  phoneNo: { type: string, example: "2222222222" }
                  brandID: { type: string, example: db8414b4-e527-4be6-b2bf-df5cb7a646c7 }
                  city: { type: string, example: jaipur }
                  zipCode: { type: string, example: 202020 }
                  address: { type: string, example: Mansarovar Jaipur }
                  country: { type: string, example: IN }
                  stateCode: { type: string, example: ra }
                  custRegDate: { type: string, example: 2024-11-27 }
                  successTrans: { type: integer, example: 32 }
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string, example: Customer with this information does not exist }
                  code: { type: string, example: customer_does_not_exist }
