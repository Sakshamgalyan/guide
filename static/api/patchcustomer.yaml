openapi: 3.0.3
info:
  title: ''

servers:
  - url: https://api.paysecure.net    

paths:
  /api/v1/{customerId}/patchCustomer:
    patch:
      tags: [CUSTOMER]
      summary: Update customer details
      parameters:
        - in: path
          name: customerId
          required: true
          schema: { type: string }
        - in: header
          name: Authorisation
          required: true
          schema: { type: string }
        - in: header
          name: BrandId
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullName: { type: string, example: Akshay Singh }
                emailId: { type: string, format: email, example: testuserabcd@gmail.com }
                dateOfBirth: { type: string, format: date, example: 1992-11-28 }
                phoneNo: { type: string, example: "2222222222" }
                city: { type: string, example: jaipur }
                stateCode: { type: string, example: ra }
                zipCode: { type: string, example: 202020 }
                address: { type: string, example: Mansarovar Jaipur }
                country: { type: string, example: IN }
                custRegDate: { type: string, format: date, example: 2024-11-27 }
                successTxn: { type: integer, example: 32 }
      responses:
        '200':
          description: Customer details updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  customerId: { type: string, example: customerId }
                  merchatCustomerID: { type: string, example: merchantProvidedCustomerId }
                  brandId: { type: string, example: brandId }
                  fullName: { type: string, example: Akshay Singh }
                  emailId: { type: string, example: testuserabcd@gmail.com }
                  dateOfBirth: { type: string, example: 1992-11-28 }
                  phoneNo: { type: string, example: "2222222222" }
                  city: { type: string, example: jaipur }
                  stateCode: { type: string, example: ra }
                  zipCode: { type: string, example: 202020 }
                  address: { type: string, example: Mansarovar Jaipur }
                  country: { type: string, example: IN }
                  createdOn: { type: string, example: 2025-02-27 }
                  custRegDate: { type: string, example: 2024-11-27 }
                  successTrans: { type: integer, example: 32 }
                  lastActivity: { type: string, example: "" }
                  lastUpdated: { type: string, example: "" }
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string, example: Invalid Request }
                  code: { type: string, example: invalid_request }
        '404':
          description: Customer Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string, example: Customer not found }
                  code: { type: string, example: customer_not_found }
